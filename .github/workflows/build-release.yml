name: Build Release Assets
on:
  push:
    branches: ['*']
  workflow_dispatch:

env:
  CI_BLADEBIT: 1  # Our own CI, that is, not being built as a dependency

jobs:
  build-harvester-linux-arm64:
    runs-on: [ARM64, Linux]
    container:
      image: quay.io/pypa/manylinux2014_aarch64
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Cache DNF packages
        uses: actions/cache@v3
        with:
          path: /var/cache/dnf
          key: ${{ runner.os }}-dnf-${{ hashFiles('**/your-build-file') }}
          restore-keys: |
            ${{ runner.os }}-dnf-

      - name: Get Version Number
        id: version_number
        shell: bash
        run: ./.github/actions/get-version.sh centos arm64

      - name: Install Prerequisites
        shell: bash
        run: |
          set -eo pipefail
          dnf install -y dnf-plugins-core
          dnf install -y epel-release epel-next-release
          dnf makecache
          dnf install -y kernel-headers.aarch64 kernel-devel.aarch64 tar bzip2 make automake gcc gcc-c++ pciutils elfutils-libelf-devel libglvnd-opengl libglvnd-glx libglvnd-devel acpid pkgconfig dkms
          dnf install -y cmake
          dnf group install -y "Development Tools"
          dnf install -y gmp-devel numactl-devel make git wget sed

      - name: Setup CUDA
        run: |
          set -eo pipefail
          dnf config-manager --add-repo http://developer.download.nvidia.com/compute/cuda/repos/rhel9/$(uname -i)/cuda-rhel9.repo
          dnf config-manager --add-repo http://developer.download.nvidia.com/compute/cuda/repos/rhel9/sbsa/cuda-rhel9.repo
          dnf makecache
          dnf install -y cuda.aarch64
          dnf install -y cuda-toolkit
          ls -la /usr/local/
          ls -la /usr/local/cuda*
          export PATH=/usr/local/cuda-12.1/bin${PATH:+:${PATH}}
          export LD_LIBRARY_PATH=/usr/local/cuda-12.1/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
      - name: Build Harvester
        shell: bash
        run: |
          export artifact_name="green_reaper-v${{ env.BB_VERSION }}-linux-ARM64"
          echo "harvester_artifact_name=${artifact_name}" >> "$GITHUB_ENV"
          # emits env.harvester_artifact_path
          bash .github/actions/build-harvester.sh --artifact "${artifact_name}"

      - name: Upload Harvester Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.harvester_artifact_name }}
          path: ${{ env.harvester_artifact_path }}
          if-no-files-found: error

  # build-centos-arm64:
  #   runs-on: [ARM64, Linux]
  #   container:
  #     image: quay.io/centos/centos:stream9
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v3

  #     - name: Get Version Number
  #       id: version_number
  #       run: .github/actions/get-version.sh centos arm64

  #     - name: Install Prerequisites
  #       run: |
  #         dnf install -y gcc gcc-c++ openssl-devel bzip2-devel libffi-devel zlib-devel make \
  #                        gmp-devel numactl-devel make git wget subscription-manager sudo cmake

  #     - name: Build
  #       env:
  #         BB_ARTIFACT_NAME: ${{ env.BB_ARTIFACT_NAME }}
  #         BB_VERSION: ${{env.BB_VERSION}}
  #       run: |
  #         .github/actions/build-asset-unix.sh

  #     - name: Upload Artifact CentOS ARM64
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ env.BB_ARTIFACT_NAME }}
  #         path: ${{ github.workspace }}/bin/${{ env.BB_ARTIFACT_NAME }}
  #         if-no-files-found: error

### Consolidated
